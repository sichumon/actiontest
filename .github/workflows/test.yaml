name: Create Release and Upload Artifacts

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Generate random files
      run: |
        for i in {1..3}; do
          echo "This is file $i" > "file_$i.txt"
        done

    - name: Archive files into tar
      run: tar czf files.tar.gz file*

    - name: Create a 1MB file and zip
      run: dd if=/dev/zero of=large_file bs=1024 count=1024 && zip large_file.zip large_file

    - name: Get current version
      id: get_version
      run: echo "::set-output name=version::$(cat version.txt)"

    - name: Bump up version
      id: bump_version
      run: echo "::set-output name=version::$(echo ${{ steps.get_version.outputs.version }} | awk -F. '{$NF++; print}' OFS=.)"
      
    - name: Count tar files
      id: count_files
      run: echo "::set-output name=count::$(ls -1q file*.tar.gz | wc -l)"

    - name: Create Release if 3 or more tar files
      id: create_release
      run: |
        if [ ${{ steps.count_files.outputs.count }} -ge 3 ]; then
          TAG_NAME="v${{ steps.bump_version.outputs.version }}"
          echo "Creating release $TAG_NAME"
          echo "::set-output name=tag_name::$TAG_NAME"
        else
          echo "Not enough tar files to create a release."
        fi

    - name: Update version file
      if: steps.create_release.outputs.tag_name
      run: echo ${{ steps.bump_version.outputs.version }} > version.txt

    - name: Upload files to release
      if: steps.create_release.outputs.tag_name
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.create_release.outputs.tag_name }}
        release_name: Release ${{ steps.create_release.outputs.tag_name }}
        body: Release ${{ steps.create_release.outputs.tag_name }}

    - name: Upload files to release
      if: steps.create_release.outputs.tag_name
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: files.tar.gz
        asset_name: files.tar.gz
        asset_content_type: application/gzip

    - name: Upload files to release
      if: steps.create_release.outputs.tag_name
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: large_file.zip
        asset_name: large_file.zip
        asset_content_type: application/zip
